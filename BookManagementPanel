 package BookManagement;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class BookManagementPanel extends JPanel {
    private JToolBar toolBar;
    private Management management; // Reference to the Management class
    private JPanel inputPanel; // Declare inputPanel

    // Input fields for adding a book
    private JTextField titleField, authorField, isbnField, yearField, amountField;

    // Input fields for removing a book
    private JTextField removeTitleField, removeAmountField;

    // Input fields for searching a book
    private JTextField searchTitleField;

    private RightSidePanel rightSidePanel; // Reference to the RightSidePanel
    private JTextField textField;
    private JTextField textField_1;

    public BookManagementPanel(Management management, RightSidePanel rightSidePanel) {
        this.management = management; // Initialize the management instance
        this.rightSidePanel = rightSidePanel; // Initialize the right side panel
        setLayout(new BorderLayout());
        setBorder(BorderFactory.createTitledBorder("Book Management")); // Set a border for the panel

        // Create the toolbar
        toolBar = new JToolBar("Book Management");
        toolBar.setFloatable(false); // Make the toolbar non-floatable

        // Create buttons for the toolbar
        JButton addButton = new JButton("Add Book");
        JButton removeButton = new JButton("Remove Book");
        JButton searchButton = new JButton("Search Book");
        JButton displayButton = new JButton("Display All Books");
        JButton exitButton = new JButton("Exit");

        // Add action listeners to the buttons
        addButton.addActionListener(e -> showAddBookFields());
        removeButton.addActionListener(e -> showRemoveBookFields());
        searchButton.addActionListener(e -> showSearchBookFields());
        displayButton.addActionListener(e -> displayBooks());
        exitButton.addActionListener(e -> exitToRightSidePanel());

        // Add buttons to the toolbar
        toolBar.add(addButton);
        toolBar.add(removeButton);
        toolBar.add(searchButton);
        toolBar.add(displayButton);
        toolBar.add(exitButton);

        // Add the toolbar to the panel
        add(toolBar, BorderLayout.NORTH);

        // Create input fields panel
        inputPanel = new JPanel(new CardLayout());
        inputPanel.add("AddBook", createAddBookPanel());
        inputPanel.add("RemoveBook", createRemoveBookPanel());
        inputPanel.add("SearchBook", createSearchBookPanel());

        // Initially hide input fields
        add(inputPanel, BorderLayout.CENTER);
    }

    private JPanel createAddBookPanel() {
        JPanel panel = new JPanel();
        panel.setLayout(null);
        JLabel label = new JLabel("Title:");
        label.setBounds(0, 1, 266, 54);
        panel.add(label);
        titleField = new JTextField();
        titleField.setBounds(266, 1, 266, 54);
        panel.add(titleField);

        JLabel label_1 = new JLabel("Author:");
        label_1.setBounds(0, 55, 266, 54);
        panel.add(label_1);
        authorField = new JTextField();
        authorField.setBounds(266, 55, 266, 54);
        panel.add(authorField);

        JLabel label_2 = new JLabel("ISBN:");
        label_2.setBounds(0, 109, 266, 54);
        panel.add(label_2);
        isbnField = new JTextField();
        isbnField.setBounds(266, 109, 266, 54);
        panel.add(isbnField);

        JLabel label_3 = new JLabel("Publication Year:");
        label_3.setBounds(0, 163, 266, 54);
        panel.add(label_3);
        yearField = new JTextField();
        yearField.setBounds(266, 163, 266, 54);
        panel.add(yearField);

        JLabel label_4 = new JLabel("Amount:");
        label_4.setBounds(0, 217, 266, 54);
        panel.add(label_4);
        amountField = new JTextField();
        amountField.setBounds(266, 217, 266, 54);
        panel.add(amountField);

        // Create a button for submitting the add book action
        JButton submitButton = new JButton("Submit");
        submitButton.setBounds(139, 272, 173, 54);
        submitButton.addActionListener(e -> addBook());
        panel.add(submitButton);

        return panel;
    }

    private JPanel createRemoveBookPanel() {
        JPanel panel = new JPanel();
        panel.setLayout(null);
        JLabel label = new JLabel("Title:");
        label.setBounds(0, 1, 266, 108);
        panel.add(label);
        removeTitleField = new JTextField();
        removeTitleField.setBounds(266, 1, 266, 108);
        panel.add(removeTitleField);

        JLabel label_1 = new JLabel("Amount:");
        label_1.setBounds(0, 109, 266, 108);
        panel.add(label_1);
        removeAmountField = new JTextField();
        removeAmountField.setBounds(266, 109, 266, 108);
        panel.add(removeAmountField);

        // Create a button for submitting the remove book action
        JButton removeButton = new JButton("Remove");
        removeButton.setBounds(136, 263, 180, 57);
        removeButton.addActionListener(e -> removeBook());
        panel.add(removeButton);

        return panel;
    }

    private JPanel createSearchBookPanel() {
        JPanel panel = new JPanel();
        panel.setLayout(null);
        JLabel label = new JLabel("Title:");
        label.setBounds(6, 47, 176, 78);
        panel.add(label);
        searchTitleField = new JTextField();
        searchTitleField.setBounds(78, 56, 284, 61);
        panel.add(searchTitleField);

        // Create a button for submitting the search book action
        JButton searchButton = new JButton("Search");
        searchButton.setBounds(78, 278, 150, 42);
        searchButton.addActionListener(e -> searchBook());
        panel.add(searchButton);
        
        JLabel lblNewLabel = new JLabel("Author");
        lblNewLabel.setBounds(6, 136, 83, 47);
        panel.add(lblNewLabel);
        
        JLabel lblNewLabel_1 = new JLabel("ISBN");
        lblNewLabel_1.setBounds(6, 219, 83, 47);
        panel.add(lblNewLabel_1);
        
        textField = new JTextField();
        textField.setBounds(78, 129, 284, 61);
        panel.add(textField);
        textField.setColumns(10);
        
        textField_1 = new JTextField();
        textField_1.setBounds(78, 202, 284, 64);
        panel.add(textField_1);
        textField_1.setColumns(10);
        
        JLabel lblNewLabel_2 = new JLabel("Select an option to search for a book:");
        lblNewLabel_2.setBounds(92, 6, 308, 16);
        panel.add(lblNewLabel_2);

        return panel;
    }

    private void showAddBookFields() {
        clearFields();
        CardLayout cl = (CardLayout) (inputPanel.getLayout());
        cl.show(inputPanel, "AddBook");
        showMessage("Enter book details to add:");
    }

    private void showRemoveBookFields() {
        clearFields();
        CardLayout cl = (CardLayout) (inputPanel.getLayout());
        cl.show(inputPanel, "RemoveBook");
        showMessage("Enter the title and amount to remove:");
    }

    private void showSearchBookFields() {
        clearFields();
        CardLayout cl = (CardLayout) (inputPanel.getLayout());
        cl.show(inputPanel, "SearchBook");
        showMessage("Enter the title to search:");
    }

    private void displayBooks() {
        // Call the displayBooks method from Management class
        management.displayBooks();
        showMessage("Books displayed.");
    }

    private void addBook() {
        // Get the input values
        String title = titleField.getText();
        String author = authorField.getText();
        String isbnStr = isbnField.getText();
        String yearStr = yearField.getText();
        String amountStr = amountField.getText();

        // Validate and convert input values
        try {
            int isbn = Integer.parseInt(isbnStr);
            int year = Integer.parseInt(yearStr);
            int amount = Integer.parseInt(amountStr);

            // Call the management method to add the book
            management.addBook(title, author, isbn, year, amount);
            showMessage("Book added successfully.");
        } catch (NumberFormatException e) {
            showMessage("Error: ISBN, Year, and Amount must be valid integers.");
        } catch (Exception e) {
            showMessage("Error: " + e.getMessage());
        }
    }

    private void removeBook() {
        // Get the input values
        String title = removeTitleField.getText();
        String amountStr = removeAmountField.getText();

        // Validate and convert input values
        try {
            int amount = Integer.parseInt(amountStr);

            // Call the management method to remove the book
            boolean removed = management.deleteAmount(title, amount);
            if (removed) {
                showMessage("Successfully removed " + amount + " copies.");
            } else {
                showMessage("Error: Not enough copies to remove or book not found.");
            }
        } catch (NumberFormatException e) {
            showMessage("Error: Amount must be a valid integer.");
        } catch (Exception e) {
            showMessage("Error: " + e.getMessage());
        }
    }

    private void searchBook() {
        // Get the input value
        String title = searchTitleField.getText();

        // Call the management method to search for the book
        Books foundBook = management.libraryBST.searchByTitle(title);
        if (foundBook != null) {
            showMessage("Book Found: " + foundBook);
        } else {
            showMessage("Book Not Found");
        }
    }

    private void clearFields() {
        titleField.setText("");
        authorField.setText("");
        isbnField.setText("");
        yearField.setText("");
        amountField.setText("");
        removeTitleField.setText("");
        removeAmountField.setText("");
        searchTitleField.setText("");
    }

    private void exitToRightSidePanel() {
        // Logic to go back to the right-side panel
        rightSidePanel.showPanel("HOME"); // Assuming "HOME" is the name of the home panel
    }

    private void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
}

    
